{
  "id": "chatcmpl-A3U7PbKrRhiPYxBCKkLwkaEqYGd0B",
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "message": {
        "content": "ubwu | In the above experiments, the string images were artificially generated from individual character. The advantage is that we know in advance the location and the label of the important character. With real training data, the correct sequence of labels for a string is generally available, but the precise locations of each corresponding character in the input image are unknown.\nucme | In the experiments described in the previous section, the best interpretation was extracted from the SDNN output using a very simple GT. Global training of an SDNN can be performed by back propagating gradients through such GT's arranged in architectures similar to the ones described in Section Six.\nqnl5 | This is somewhat equivalent to modeling the output of an SDNN with an HMM. Globally trained, variable-size TDNN/HMM hybrids have been used for speech recognition and online handwriting recognition. SDNN's have been used in combination with HMM's or other elastic matching methods for handwritten word recognition.\nwdx9 | be used, because using a nondiscriminative criterion could result in a collapse effect if the network's output RBF are adaptive. The above training procedure can be equivalently formulated in term of HMM. Early experiments in zip code recognition, and more recent experiments in online handwriting recognition have demonstrated the idea of globally trained SDNN/HMM hybrids. SDNN is an extremely promising and attractive technique for OCR, but so far it has not yielded better results than HOS. We hope that these results will improve as more experience is gained with these models.\nn1xr | D. Object Detection and Spotting with SDNN\nohpj | An interesting application of SDNN's is object detection and spotting. The invariance properties of convolutional networks, combined with the efficiency with which they can be replicated over large fields, suggests that they can be used for \"brute force\" object spotting and detection in large images. The main idea is to train a single convolutional network to distinguish images of the object of interest from images present in the background. In utilization mode, the network is replicated so as to cover the entire image to be analyzed, thereby forming a two-dimensional SDNN. The output of the SDNN is a two-dimensional plane in which activated units indicate the presence of the object of interest in the corresponding receptive field. Since the sizes of the objects to be detected within the image are unknown, the image can be presented to the network at multiple resolutions, and the results at multiple resolutions combined. The idea has been applied to face location, address block location on envelopes, and hand tracking in video.\nry5f | To illustrate the method, we will consider the case of face detection in images as described. First,\n31wg | images containing faces at various scales are collected. Those images are filtered through a zero-mean Laplacian filter so as to remove variations in global illumination and low spatial frequency illumination gradients. Then, training samples of faces and nonfaces are manually extracted from those images. The face subimages are then size normalized so that the height of the entire face is approximately twenty pixels while keeping fairly large variations (within a factor of two). The scale of background subimages are picked at random. A single convolutional network is trained on those samples to classify face subimages from nonface subimages.\ncelk | When a scene image is to be analyzed, it is first filtered through the Laplacian filter and subsampled at powers-of-two resolutions. The network is replicated over each of multiple resolution images. A simple voting technique is used to combine the results from multiple resolutions.\n3mf9 | A two-dimensional version of the global training method described in the previous section can be used to alleviate the need to manually locate faces when building the training sample. Each possible location is seen as an alternative interpretation, i.e., one of several parallel arcs in a simple graph that only contains a start node and an end node.\nz2rd | Other authors have used neural networks or other classifiers such as SVM's for face detection with great success. Their systems are very similar to the one described above, including the idea of presenting the image to the network at multiple scales. But since those systems do not use convolutional networks, they cannot take advantage of the speedup described here, and they have to rely on other techniques, such as prefiltering and real-time tracking, to keep the computational requirement within reasonable limits. In addition, because those classifiers are much less invariant to scale variations than convolutional networks, it is necessary to multiply the number of scales at which the images are presented to the classifier.\nvqld | Eight. Graph Transformer Networks and Transducers\nljmz | In Section Four, GTN's were introduced as a generalization of multilayer, multimodule networks where the state information is represented as graphs instead of fixed-size vectors. This section reinterprets the GTN's in the framework of generalized transduction and proposes a powerful graph composition algorithm.\nen1l | A. Previous Work\n45gx | Numerous authors in speech recognition have used gradient-based learning methods that integrate graph-based statistical models (notably HMM's) with acoustic recognition modules, mainly Gaussian mixture models, but also neural networks. Similar ideas have been applied to handwriting recognition. However, there has been no proposal for a systematic approach to multilayer graph-based trainable systems. The idea of transforming graphs into other graphs has received considerable attention in computer science\nxgur | through the concept of weighted finite-state transducers. Transducers have been applied to speech recognition and language translation, and proposals have been made for handwriting recognition. This line of work has been mainly focused on efficient search algorithms and on the algebraic aspects of combining transducers and graphs (called acceptors in this context), but very little effort has been devoted to building globally trainable systems out of transducers. What is proposed in the following sections is a systematic approach to automatic training in graph-manipulating systems. A different approach to graph-based trainable systems, called input-output HMM, was proposed.\niz66 | B. Standard Transduction",
        "role": "assistant",
        "function_call": null,
        "tool_calls": null,
        "refusal": null
      }
    }
  ],
  "created": 1725394123,
  "model": "gpt-4o-2024-05-13",
  "object": "chat.completion",
  "system_fingerprint": "fp_fde2829a40",
  "usage": {
    "completion_tokens": 1224,
    "prompt_tokens": 3000,
    "total_tokens": 4224
  }
}