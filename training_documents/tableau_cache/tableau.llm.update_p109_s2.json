{
  "id": "chatcmpl-A3UEFoYgWvVH2DWIwYKr6UnVuD7rC",
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "message": {
        "content": "```plaintext\n1ipu | Type conversions\no68o | We will begin with type conversions because you cannot create properly functioning calculated fields without having the fields in the right format. For instance, aggregations work on numeric fields, string functions work on strings, and date functions work on dates. Tableau Public automatically identifies the type of field based on its contents, but this may not meet your needs to aggregate or create calculations. Publicly available data sources often have issues with either the format or the quality of the data. This will make it necessary for you to convert fields into different types, and it is quite likely that you will need to strip bad data and identify replacement values as well.\nrvp9 | If you are familiar with relational database management, you are probably aware that there are many different field types, some of which are used to govern the field length within a database. Tableau Public focuses on the three primary field types, namely; string, which can be anything; numeric fields, which include integers and float fields; and datetime fields; which include the DATETIME, DATE, and TIME field formats.\nwwgc | You can convert a field to another type by creating a calculated field and wrapping it in the appropriate function. In case fields are of the same parent form or are interchangeable, you can right-click on the field name, select Change Data Type, and then choose the appropriate type. If you do need to change the format manually, you can use the following functions:\nbjgk | . DATE: This converts the strings that you specify (whether you enter them yourself or they are predefined) into date fields, which can then be used to drill through hierarchies.\nvz7z | . DATETIME: This converts a field or string into a datetime field, which is a date plus a timestamp.\nwk43 | . FLOAT: This converts integers into decimal numbers. This function works only on numeric formats.\n1002 | . INT: This takes the whole number of a numeric expression by rounding up to the nearest whole number.\nujk8 | . MAKEDATE: This formats an entry for a year, month, and day into the MM/DD/YYYY format as a proper date. It also accepts fields for the datepart variables.\nfqbt | Chapter Five\nrkbk | . MAKEDATETIME and MAKETIME: These functions accept proper dateparts, just like MAKEDATE, to convert variable or hard-coded sequences into the appropriate field types.\nu1bd | · STR: This turns a sequence of characters, numbers, letters, or special characters into strings.\nq22z | The string functions\nl8vb | The string fields are often the richest in data source as they include other fields with free text, but they can also have the lowest data quality. The string functions in Tableau Public empower you to perform splice, trim, find, replace, match, reformat, and concatenate functions.\njrb6 | We will use several of these functions to clean up the floods data source, which was assembled manually and has several data quality issues.\nptaj | The following are some of the most useful functions that we will use:\nnusy | . CONTAINS: This has a Boolean output. It tests whether a field contains the specified string.\ngsnv | . FIND: This finds the place where a string of characters is located within a field.\n0mnu | . LEFT, MID, and RIGHT: These often work in conjunction with FIND and LEN when extracting fixed or variable strings of characters from a field.\n3w0z | . LEN: This produces the length of a field.\nuwfw | . MIN and MAX: These are commonly used on numeric fields. They produce the numerically minimum or maximum values in sequences respectively.\n0caz | . The REGEX expressions: These features were introduced in Tableau Public nine point zero. They extract, match, and replace variable strings within fields and are similar to the LIKE function in ANSI SQL.\n4auz | . REPLACE: This replaces a sequence with a specified value.\n6nou | . TRIM, LTRIM, and RTRIM: These trim leading or lagging spaces from a string.\nxaqk | . UPPER and LOWER: These are commonly used to normalize the contents of a field.\na1ou | In the next few examples, as shown in the following screenshot, we will use the TRIM and REGEX functions to repair the quality of the most varied misspellings of several countries. It looks like many of the values in the Country Name source field have spaces on either side of the primary value, which is not great and it's something that we need to fix:\nzae5 | This is helpful. We now have fewer unique entries for country names than before, but bad characters are still present in the data-set.\noa93 | There are two options for the replacement of characters in a string, namely REPLACE and REGEXP_REPLACE:\nlcuj | • REPLACE: This requires you to enter the string to be searched, the exact pattern to be replaced, and the replacement value. The advantage of using REPLACE is that it is easy to learn and execute. The disadvantage is that Tableau Public can search and replace only one string at a time.\ncua2 | • REGEXP_REPLACE: This is a robust function, and while it takes practice to master it, this is widely used in different programming languages. It is a type of regular expression. Among the technical users of Tableau Public, the introduction of regular expressions in nine point x was highly anticipated because the search pattern allows a high degree of variability. You can enter a specific letter, number, or special character as the pattern that you need to search, or you can tell Tableau Public to find letters, numbers, or a variety of special characters. You can also ask Tableau Public to find a combination of these.\nuipb | Chapter Five\nbjno | Regular expressions are efficient, and they require less hard-coding than the REPLACE function. This means that you will need to modify them less as your data set changes. This is important with data sets that you or other people are compiling because humans inevitably introduce errors. Anyone can fat-finger a country name when they're entering data.\nw2lh | The regular expression that we entered includes the string to search, the pattern to search, which is entered in quotation marks, and the replacement, which is blank, as shown in the following screenshot:\nqryo | The pattern that we entered, which is also called a token, has several parts. This is shown in the following screenshot:\nd0c0 | Everything within the quotation marks is a token. Working from the outside, the plus sign asks Tableau Public to match any of the expressions inside the brackets. Within the brackets, there are two expressions that need to be found, namely a period and a letter D. These expressions are very different from each other; the period is a literal, which means that we want Tableau Public to find all the periods. The D is a variable, and it means that we want Tableau Public to find numbers.\nc4id | The two expressions, namely the period and the D variable, are preceded by a backslash. This is an escape. The concept of escapes is beyond the scope of this book. However, it is critical to master them if you want to learn how to structure data because they tell programming applications where to break apart long strings of variable characters, such as URLs. In this case, they ask Tableau Public to look for exactly the expression that we have entered.\n5mai | The aggregate functions\n```",
        "role": "assistant",
        "function_call": null,
        "tool_calls": null,
        "refusal": null
      }
    }
  ],
  "created": 1725394547,
  "model": "gpt-4o-2024-05-13",
  "object": "chat.completion",
  "system_fingerprint": "fp_fde2829a40",
  "usage": {
    "completion_tokens": 1544,
    "prompt_tokens": 3435,
    "total_tokens": 4979
  }
}