{
  "id": "chatcmpl-A3UELxR8IamV13KtZuD9hUBAKQVAS",
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "message": {
        "content": "2jap | Strings: This includes options to find characters, measure string length, split and parse fields, and match character strings.\nbvr5 | Chapter Five\n9epd | Date: This includes functions for duration, the addition and subtraction of dates, the truncation of dates, and the identification of date parts.\nyt8f | Type conversion: This allows you to convert fields into different types without modifying the metadata of the source field.\n5rn1 | Logical: This includes the powerful IF, CASE, and ISNULL and allows you to tell Tableau Public how to group fields or relate them to parameters.\npv88 | Aggregate calculations: These are the most commonly used functions; they include sum, count, average, minimum, maximum, and median.\nqhnu | User functions: These are more commonly used for Tableau Server rather than Tableau Public; they allow you to create calculated fields that operate on usernames or groups.\nibdj | Table calculation: This will be detailed in the next chapter; it allows you to compute aggregations based on data points that are visible in the current window.\n799w | The number functions\nr3vu | Number functions include several functions that you may be familiar with owing to working with applications such as ROUND and ABS. Many of us may not have used several of these functions, such as the trigonometric and exponential functions, since our high school math class. There are some number functions that we will use extensively, such as MIN and MAX, while there are others that have limited uses, such as the geometric and trigonometric functions.\nk899 | Number functions include the following, in order of decreasing precedence:\n29to | ABS: This takes the absolute value of a number. It is commonly found in the denominator of table calculations.\n0bo0 | CEILING: This rounds up a decimal to its nearest integer and is the opposite of INT.\nsbs5 | FLOOR: This rounds a decimal down to its nearest integer.\neinv | MAX and MIN: These take the maximum and minimum values in a sequence respectively. They are also considered to be string functions.\n1vda | ROUND: This allows you to specify how many decimals to round up a float number to.\nzfos | ZN: This is predominantly found in table calculations. It tells Tableau Public that if a numeric field has a NULL value, you want to replace it with zero.\ngzuq | DIV: This produces the whole number product of a division statement.\ncrr5 | PI: This produces the numeric value of pi.\na0je | SIGN: This produces a numeric value (one, zero, or zero one) based on the input, which may be positive, zero, or negative respectively.\negcq | Trigonometric and geometric functions: These are largely beyond the scope of this book. These functions include ACOS, ASIN, ATAN, ATAN two, COS, COT, DEGREES, RADIANS, SIN, and TAN as well as HEXBIN X and HEXBIN Y.\nklw0 | Exponential and logarithmic functions: These functions include EXP, LN, LOG, POWER, SQRT, and SQUARE.\nuhd3 | The date functions\n9ivc | The date functions are useful for a variety of tasks, such as identifying the elapsed time between two events or a part of a date.\ndd00 | Many date functions in Tableau Public operate on dateparts. Dateparts are the small units of measurement of dates, such as a year, quarter, month, week, day, and the units of time, such as an hour, a minute, and a second. Writing date functions in Tableau Public is similar to writing date functions in ANSI SQL or Microsoft Excel with a big difference - dateparts need to be spelled out and enclosed in single quotation marks, which is a relatively simple design and use of punctuation for a programming language.\nn9f1 | The most commonly performed analysis is the measurement of change over time, and the prevalence of date functions is high. Therefore, it is worth the time and effort to master them early on in your work with Tableau Public.\no0ah | The date functions include the following functions:\ntblh | DATEADD: This adds numeric values, which can be hard-coded or variable, in a specific number of dateparts to a date.\ne3h8 | DATEDIFF: This calculates the elapsed number of specified dateparts between two dates.\n5e6c | DATENAME: This produces the name of the specified datepart of a date. An example that demonstrates the implementation of this function is, DATENAME ('month', hash seven/twenty-one/twenty-fifteen hash) equals \"July\".\nghh6 | DATEPARSE: This turns a string into a date in the format that you specify.\nddky | Chapter Five\n7y2m | DATEPART: This is similar to DATENAME. It returns the datepart of a specified date but returns a numeric value. An example that demonstrates the implementation of this function is, DATEPART ('month', hash seven/twenty-one/twenty-fifteen hash) equals seven.\nxmzo | DATETRUNC: This rounds up a date to the first date of the datepart that you specify. An example that demonstrates how to implement this function is, DATETRUNC ('month', hash seven/twenty-one/twenty-fifteen hash) equals 'seven/one/twenty-fifteen'.\nc3ng | DAY: This returns the day of the month of a given date. An example that demonstrates how to implement this function is, DAY (hash seven/twenty-one/twenty-fifteen hash) equals twenty-one.\n9dle | ISDATE: This tests whether a string that you enter is actually a date and produces a Boolean value (true or false).\nxhxk | MONTH: This produces the numerical month of a date.\nkidv | TODAY and NOW: These produce the date and datetime of the current moment by using the time settings on your computer.\nzawm | YEAR: This produces the year of the current date.\n6apv | In the following example, we will use the floods data to determine the number of years that have elapsed since the last major flood. Most of the countries have had many floods and not just one. Therefore, we used the maximum value of Date Began, which is the most recent date in the data set, and compared it with today's date.\nw9mq | We could have omitted the max from the Date Began, but for each country, Tableau Public would have then aggregated the elapsed time per country, and we really wanted to know how long it has been since the most recent flood, as shown in the following screenshot:\np2ic | Type conversions\ndz65 | We will begin with type conversions because you cannot create properly functioning calculated fields without having the fields in the right format. For instance, aggregations work on numeric fields, string functions work on strings, and date functions work on dates. Tableau Public automatically identifies the type of field based on its contents, but this may not meet your needs to aggregate or create calculations. Publicly available data sources, such as the ones available at the tableau public website, often have issues with either the format or the quality of the data. This will make it necessary for you to convert fields into different types, and it is quite likely that you will need to strip bad data and identify replacement values as well.\n4lxl | If you are familiar with relational database management, you are probably aware that there are many different field types, some of which are used to govern the field length within a database. Tableau Public focuses on the three primary field types, namely; string, which can be anything; numeric fields, which include integers and float fields; and datetime fields; which include the DATETIME, DATE, and TIME field formats.\niqju | You can convert a field to another type by creating a calculated field and wrapping it in the appropriate function. In case fields are of the same parent form or are interchangeable, you can right-click on the field name, select Change Data Type, and then choose the appropriate type. If you do need to change the format manually, you can use the following functions:",
        "role": "assistant",
        "function_call": null,
        "tool_calls": null,
        "refusal": null
      }
    }
  ],
  "created": 1725394553,
  "model": "gpt-4o-2024-05-13",
  "object": "chat.completion",
  "system_fingerprint": "fp_fde2829a40",
  "usage": {
    "completion_tokens": 1688,
    "prompt_tokens": 3382,
    "total_tokens": 5070
  }
}