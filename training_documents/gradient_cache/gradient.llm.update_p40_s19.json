{
  "id": "chatcmpl-A3U7RMQ7VxPpRgubDJ46NJn3ANhMm",
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "message": {
        "content": "w0aw | An independent test performed by systems integrators in nineteen ninety-five showed the superiority of this system over other commercial courtesy amount reading systems. The system was integrated in NCR's line of check reading systems. It has been fielded in several banks across the United States since June nineteen ninety-six, and it has been reading millions of checks per day since then.\nw41b | Eleven. Conclusions\nvokd | During the short history of automatic pattern recognition, increasing the role of learning seems to have invariably improved the overall performance of recognition systems. The systems described in this paper are more evidence to this fact. Convolutional Neural Networks have been shown to eliminate the need for hand-crafted feature extractors. General Transduction Networks have been shown to reduce the need for hand-crafted heuristics, manual labeling, and manual parameter tuning in document recognition systems. As training data becomes plentiful, as computers get faster, and as our understanding of learning algorithms improves, recognition systems will rely more and more on learning and their performance will improve.\nefir | Just as the back-propagation algorithm elegantly solved the credit assignment problem in multilayer Neural Networks, the gradient-based learning procedure for General Transduction Networks introduced in this paper solves the credit assignment problem in systems whose functional architecture dynamically changes with each new input. The learning algorithms presented here are in a sense nothing more than unusual forms of gradient descent in complex, dynamic architectures, with efficient back-propagation algorithms to compute the gradient. The results in this paper help establish the usefulness and relevance of gradient-based minimization methods as a general organizing principle for learning in large systems.\nvjhs | It was shown that all the steps of a document analysis system can be formulated as Graph Transformations through which gradients can be back propagated. Even in the nontrainable parts of the system, the design philosophy in terms of graph transformation provides a clear separation between domain-specific heuristics and generic, procedural knowledge.\nrcio | ...\n7qi5 | It is worth pointing out that data generating models and the maximum likelihood principle were not called upon to justify most of the architectures and the training criteria described in this paper. Gradient-based learning applied to global discriminative loss functions guarantees optimal classification and rejection without the use of \"hard to justify\" principles that put strong constraints on the system architecture, often at the expense of performances.\n9f5r | More specifically, the methods and architectures presented in this paper offer generic solutions to a large number of problems encountered in pattern recognition systems.\nj3tt | One. Feature extraction is traditionally a fixed transform, and it is generally derived from some expert prior knowledge about the task. This relies on the probably incorrect assumption that the human designer is able to capture all the relevant information in the input. We have shown that the application of gradient-based learning to convolutional Neural Networks allows us to learn appropriate features from examples. The success of this approach was demonstrated in extensive comparative digit recognition experiments on the NIST database.\nzoz0 | Two. Segmentation and recognition of objects in images cannot be completely decoupled. Instead of taking hard segmentation decisions too early, we have used Higher Order Statistics to generate and evaluate a large number of hypotheses in parallel, postponing any decision until the overall criterion is minimized.\n3blu | Three. Hand-truthing images to obtain segmented characters for training a character recognizer is expensive and does not take into account the way in which a whole document or sequence of characters will be recognized. Instead we train multimodule systems to optimize a global measure of performance, which does not require time consuming detailed hand-truthing and yields significantly better recognition performance because it allows training these modules to cooperate toward a common goal.\nxv2l | Four. Ambiguities inherent in the segmentation, character recognition, and linguistic model should be integrated optimally. Instead of using a sequence of task-dependent heuristics to combine these sources of information, we have proposed a unified framework in which generalized transduction methods are applied to graphs representing a weighted set of hypotheses about the input. The success of this approach was demonstrated with a commercially deployed check-reading system that reads millions of business and personal checks per day: the generalized transduction engine resides in only a few hundred lines of code.\nxt4k | Five. Traditional recognition systems rely on many hand-crafted heuristics to isolate individually recognizable objects. The promising Subspace Decomposition Neural Network approach draws on the robustness and efficiency of convolutional Neural Networks to avoid explicit segmentation altogether. Simultaneous automatic learning of segmentation and recognition can be achieved with gradient-based learning methods.\nti78 | This paper presents a small number of examples of Graph Transformation modules, but it is clear that the concept can be applied to many situations where the domain knowledge or the state information can be represented by graphs. This is the case in many audio signal recognition tasks, and visual scene analysis applications. Future work will attempt to apply Graph Transformation networks to such problems, with the hope of allowing more reliance on automatic learning and less on detailed engineering.\nk5pk | As seen before, the squashing function used in our convolutional networks is F left parenthesis A right parenthesis equals A hyperbolic tangent left parenthesis S A right parenthesis. Symmetric functions are believed to yield faster convergence, although the learning can become extremely slow if the weights are too small. The cause of this problem is that in weight space the origin is a fixed point of the learning dynamics and, although it is a saddle point, it is attractive in almost all directions. For our simulations, we use A equals one point seven one five nine and S equals two thirds. With this choice of parameters, the equalities F left parenthesis one right parenthesis equals one and F left parenthesis negative one right parenthesis equals negative one are satisfied. The rationale behind this is that the overall gain of the squashing transformation is around one in normal operating conditions, and the interpretation of the state of the network is simplified. Moreover, the absolute value of the second derivative of F is a maximum at positive one and negative one, which improves the convergence toward the end of the learning session. This particular choice of parameters is merely a convenience, and does not affect the result.\nn093 | Before training, the weights are initialized with random values using a uniform distribution between negative two point four divided by F subscript i and two point four divided by F subscript i, where F is the number of inputs, fan-in, of the unit which the connection belongs to. Since several connections share a weight, this rule could be difficult to apply, but in our case all connections sharing a same weight belong to units with identical fan-ins. The reason for dividing by the fan-in is that we would like the initial standard deviation of the weighted sums to be in the same range for each unit and to fall within the normal operating region of the sigmoid. If the initial weights are too small, the gradients are very small and the learning is slow. If they are too large, the sigmoids are saturated and the gradient is also very small. The standard deviation of the weighted sum scales like the square root of the number of inputs when the inputs are independent, and it scales linearly with the number of inputs if the inputs are highly correlated. We chose to assume the second hypothesis since some units receive highly correlated signals.",
        "role": "assistant",
        "function_call": null,
        "tool_calls": null,
        "refusal": null
      }
    }
  ],
  "created": 1725394125,
  "model": "gpt-4o-2024-05-13",
  "object": "chat.completion",
  "system_fingerprint": "fp_fde2829a40",
  "usage": {
    "completion_tokens": 1477,
    "prompt_tokens": 3309,
    "total_tokens": 4786
  }
}